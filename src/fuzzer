#!/usr/bin/python3

from pwn import *
import sys
import time
from util import usage, curr_time_taken
from payloads import *
from checktype import *

# number of processes to start
N_ITER = 10

if __name__ == '__main__':

    # Check valid input
    if len(sys.argv) != 3:
        usage()

    # If valid, then check given input file, open for reading
    try: 
        sample_file = open(sys.argv[2], 'r')

    except:
        print(f"Error: Cannot open .txt file")
        usage()
        sys.exit(1)
        
    init_time = time.time()
    binary_file = sys.argv[1]
    sample_file_str = sys.argv[2]

    print(f'AAAAAAAAfuzzing {binary_file}')


    match check_type(sample_file_str):
        case 'plaintext':
            log.info("Detected plaintext file format from given sample input.")
            if fuzz_plaintext(binary_file, sample_file_str) == 0:
                log.warn("No crashes detected.")
        case 'json':
            log.info("Detected JSON file format from given sample input.")
            if fuzz_json(binary_file, sample_file_str) == 0:
                log.warn("No crashes detected.")
        case 'csv':
            log.info("Detected CSV file format from given sample input.")
            if fuzz_csv(binary_file, sample_file, sample_file_str) == 0:
                log.warn("No crashes detected.")
        case _:
            log.info("Unknown input file format, treating as plaintext.")
            if fuzz_plaintext(binary_file, sample_file_str) == 0:
                log.warn("No crashes detected.")

    print(f"Fuzzer process done in {curr_time_taken(init_time)} seconds.")

    sys.exit()
